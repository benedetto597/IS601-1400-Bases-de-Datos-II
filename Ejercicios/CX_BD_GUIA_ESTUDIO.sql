

---CREAR LAS TABLAS COCHES, TRABAJOS, MECANICOS

CREATE TABLE COCHES(
  MAT VARCHAR2(8) PRIMARY KEY,
  MARCA VARCHAR(15),
  MODELO VARCHAR2(15),
  AN_FAB NUMBER(4)
);

CREATE TABLE MECANICOS(
  DNI VARCHAR2(9) PRIMARY KEY,
  NOMBRE VARCHAR2(15),
  PUESTO VARCHAR2(15)
);

CREATE TABLE TRABAJOS(
  MAT VARCHAR2(8),
  DNI VARCHAR(9),
  HORAS NUMBER(3,1) CONSTRAINT CK_TRABAJO CHECK (HORAS>=0.5),
  FECHA_REP DATE,
  CONSTRAINT FK1_TRABAJOS FOREIGN KEY (MAT) REFERENCES COCHES (MAT),
  CONSTRAINT FK2_TRABAJOS FOREIGN KEY (DNI) REFERENCES MECANICOS (DNI)
);

INSERT INTO COCHES VALUES('M3020KY','TOYOTA','CARINA',1996);
INSERT INTO COCHES VALUES('J1234Z','RENAULT','MEGANE',1997);
INSERT INTO COCHES VALUES('GR4321A','RENAULT','5',1978);
INSERT INTO COCHES VALUES('B4444AC','PEUGEOT','504',1978);
INSERT INTO COCHES VALUES('CA0000AD','PEUGEOT','205',1996);
INSERT INTO COCHES VALUES('GR1111AK','PEUGEOT','207',1998);
INSERT INTO COCHES VALUES('J9999AB','VW','BEATTLE',1998);

INSERT INTO MECANICOS VALUES ('1111','ANTONIO','MOTOR');
INSERT INTO MECANICOS VALUES ('2222','LUIS','MOTOR');
INSERT INTO MECANICOS VALUES ('3333','PEPE','AMORTIGUADOR');
INSERT INTO MECANICOS VALUES ('4444','LOLA','CHAPA');
INSERT INTO MECANICOS VALUES ('5555','LUISA','AMORTIGUADOR');
INSERT INTO MECANICOS VALUES ('6666','EMILIO','CHAPA');
INSERT INTO MECANICOS VALUES ('7777','ANGEL','CHAPA');

INSERT INTO TRABAJOS VALUES ('M3020KY','1111',1,'23-FEB-96');
INSERT INTO TRABAJOS VALUES ('M3020KY','2222',2.5,'23-FEB-96');
INSERT INTO TRABAJOS VALUES ('J1234Z','4444',7,'19-MAR-97');
INSERT INTO TRABAJOS VALUES ('J1234Z','2222',3,'19-MAR-97');
INSERT INTO TRABAJOS VALUES ('GR4321A','3333',2.1,'1-JAN-98');
INSERT INTO TRABAJOS VALUES ('B4444AC','3333',3.2,'23-APR-96');
INSERT INTO TRABAJOS VALUES ('CA0000AD','3333',8,'23-APR-96');
INSERT INTO TRABAJOS VALUES ('M3020KY','5555',2,'23-FEB-96');
INSERT INTO TRABAJOS VALUES ('J9999AB','6666',1,'5-MAR-98');
INSERT INTO TRABAJOS VALUES ('J9999AB','5555',0.6,'5-MAR-98');
INSERT INTO TRABAJOS VALUES ('J9999AB','2222',0.9,'5-MAR-98');
INSERT INTO TRABAJOS VALUES ('J1234Z','1111',2.2,'19-MAR-97');
INSERT INTO TRABAJOS VALUES ('GR1111AK','3333',5.5,'1-JAN-98');
INSERT INTO TRABAJOS VALUES ('J9999AB','3333',6.7,'5-MAR-98');
INSERT INTO TRABAJOS VALUES ('GR1111AK','5555',2.5,'1-JAN-98');
INSERT INTO TRABAJOS VALUES ('GR1111AK','7777',1,'1-JAN-98');

---. Crear una tabla llamada LOGS y con los campos id de tipo NUMBER, nombreUsuario
---de tipo VARCHAR2(50), fechaMod de tipo DATE y descripción de tipo VARCHAR2(100)
CREATE TABLE LOGS(
  PK_ID_LOGS NUMBER PRIMARY KEY,
  NOMBRE_USUARIO VARCHAR2(50),
  FECHAMOD DATE,
  DESCRIPCION VARCHAR2(3500)
);


---EJERCICIO 12
---Crear una secuencia para las tablas LOGS, que comience con el valor de 1 y se
---incremente de 3 en 3 y que tenga un valor mínimo de 1 y un valor máximo de 1000.

CREATE SEQUENCE SQ_TABLA_LOGS
START WITH 1
INCREMENT BY 3
MINVALUE 1
MAXVALUE 1000;

---EJERCICIO 13
---Con la secuencia creada en el ejercicio anterior, vincularla con un trigger para simular
---un campo autoincrementable en tabla LOGS

CREATE OR REPLACE TRIGGER TG_TABLA_LOGS
BEFORE INSERT ON LOGS
FOR EACH ROW
DECLARE

BEGIN
  :NEW.PK_ID_LOGS:=SQ_TABLA_LOGS.NEXTVAL;
END;

---EJERCICIO 14
---Crear triggers para las tablas mecánicos, trabajos y coches. Los triggers deben
---cumplir las condiciones siguientes
---Se deben ejecutar antes de realizar una inserción en cada tabla y guardar un
---registro en la tabla LOGS con los datos de la inserción
---Se deben ejecutar después de realizar una actualización en cada tabla y guardar
---un registro en la tabla LOGS con los datos anteriores a la actualización

CREATE OR REPLACE TRIGGER TG_TABLA_MECANICOS_INSERT
BEFORE INSERT ON MECANICOS
FOR EACH ROW
BEGIN
  INSERT INTO LOGS VALUES (SQ_TABLA_LOGS.NEXTVAL,USER,SYSTIMESTAMP,'SE REALIZO UN INSERT EN LA TABLA MECANICOS Y EL DATO NUEVO EN EL ID ES: '||:NEW.DNI||' EL NOMBRE ES: '||:NEW.NOMBRE||' Y EL PUESTO ES: '||:NEW.PUESTO);
END;

CREATE OR REPLACE TRIGGER TG_TABLA_MECANICOS_UPDATE
AFTER UPDATE ON MECANICOS
FOR EACH ROW
BEGIN
  INSERT INTO LOGS VALUES (SQ_TABLA_LOGS.NEXTVAL,USER, SYSTIMESTAMP,'SE REALIZO UN UPDATE EN LA TABLA MECANICOS Y EL DATO ANTERIOR DEL DNI ERA: '||:OLD.DNI||' EL NOMBRE ANTERIOR DEL TRABAJADOR ERA: '||:OLD.NOMBRE||' Y EL PUESTO ANTERIOR ERA: '||:OLD.PUESTO);
END;

CREATE OR REPLACE TRIGGER TG_TABLA_COCHES_INSERT
BEFORE INSERT ON COCHES
FOR EACH ROW 
BEGIN
  INSERT INTO LOGS VALUES(SQ_TABLA_LOGS.NEXTVAL,USER,SYSTIMESTAMP,'SE REALIZO UN INSERT EN LA TABLA COCHES Y EL DATO NUEVO EN EL ID ES: '||:NEW.MAT||' LA MARCA ES: '||:NEW.MARCA||' EL MODELO ES: '||:NEW.MODELO||' EL ANIO DE FABRICACION ES: '||:NEW.AN_FAB);
END;

CREATE OR REPLACE TRIGGER TG_TABLA_COCHES_UPDATE
AFTER UPDATE ON COCHES
FOR EACH ROW 
BEGIN
  INSERT INTO LOGS VALUES(SQ_TABLA_LOGS.NEXTVAL,USER,SYSTIMESTAMP,'SE REALIZO UN UPDATE EN LA TABLA COCHES Y EL DATO ANTERIOR EN EL ID ES: '||:OLD.MAT||' LA MARCA ERA: '||:OLD.MARCA||' EL MODELO ERA: '||:OLD.MODELO||' EL ANIO DE FABRICACION ERA: '||:OLD.AN_FAB);
END;

CREATE OR REPLACE TRIGGER TG_TABLA_TRABAJOS_INSERT
BEFORE INSERT ON TRABAJOS
FOR EACH ROW
BEGIN
  INSERT INTO LOGS VALUES (SQ_TABLA_LOGS.NEXTVAL,USER,SYSTIMESTAMP,'SE REALIZO UN INSERT EN LA TABLA TRABAJOS Y LA MATRICULA INGRESADA ES: '||:NEW.MAT||' EL DNI DEL TRABAJADOR ES: '||:NEW.DNI||' LAS HORAS TRABAJADAS SON: '||:NEW.HORAS||' LA FECHA ES: '||:NEW.FECHA_REP);
END;

CREATE OR REPLACE TRIGGER TG_TABLA_TRABAJOS_UPDATE
AFTER UPDATE ON TRABAJOS
FOR EACH ROW
BEGIN
  INSERT INTO LOGS VALUES (SQ_TABLA_LOGS.NEXTVAL,USER,SYSTIMESTAMP,'SE REALIZO UN UPDATE EN LA TABLA TRABAJOS Y LA MATRICULA ERA: '||:OLD.MAT||' EL DNI DEL TRABAJADOR ERA: '||:OLD.DNI||' LAS HORAS TRABAJADAS ERAN: '||:OLD.HORAS||' LA FECHA ERA: '||:OLD.FECHA_REP);
END;

---EJERCICIO 15
---Mediante el uso de la instrucción insert into, ingresar 3 registros nuevos en las tablas
---mecánicos, trabajos y coches. Luego de ingresar estos registros, comprobar que se hayan
---creado todos los registros correspondientes en la tabla LOGS

INSERT INTO COCHES VALUES('N4444PU','TOYOTA','COROLA',1996);
INSERT INTO COCHES VALUES('J1567Z','FORD','FOCUS',1997);
INSERT INTO COCHES VALUES('GR6789A','HONDA','CIVIC',1999);

INSERT INTO MECANICOS VALUES ('1122','TOÑO','AMORTIGUADOR');
INSERT INTO MECANICOS VALUES ('2233','LUCHO','CHAPA');
INSERT INTO MECANICOS VALUES ('3344','ELTON','AMORTIGUADOR');

INSERT INTO TRABAJOS VALUES ('N4444PU','1111',1,'24-FEB-96');
INSERT INTO TRABAJOS VALUES ('J1567Z','2222',2.5,'25-FEB-96');
INSERT INTO TRABAJOS VALUES ('GR6789A','4444',8,'20-MAR-97');



---EJERCICIO 16
---Crear un bloque anónimo que elimine lógicamente todos los trabajos que ha realizado
---el empleado con DNI=3333 y cuyo bloque anónimo imprima un mensaje al terminar de
---realizar la eliminación lógica de todos los registros

DECLARE
  DNI_TRABAJADOR TRABAJOS.DNI%TYPE;
  CURSOR CDNI_TRABAJADOR IS SELECT DNI FROM TRABAJOS;
  
  
BEGIN
OPEN CDNI_TRABAJADOR;

 DELETE TRABAJOS WHERE DNI ='3333';

DBMS_OUTPUT.PUT_LINE('SE ELIMINARON TODOS LOS REGISTROS');
END;

--- LO SIENTO FUE LO MEJOR QUE SE ME OCURRIO :C

---EJERCICIO 17
---Crear un bloque anónimo que realice una consulta para obtener todos los registros de
---los trabajos que ha realizado el mecánico con DNI=1111 y cuyo estado sea igual a 1. El
---DNI y el estado se deben asignar mediante la utilización de variables en el bloque
---anónimo. La consulta también debe obtener el nombre del mecánico, el nombre y modelo
---del coche. Los resultados obtenidos se deben imprimir en pantalla mediante el uso de un
---ciclo.

DECLARE

BEGIN

END;

---EJERCICIO 18
---. Hacer uso de un bloque anónimo que obtenga todos los registros de la tabla coches.
--Luego mediante el uso de un CASE mostrar en pantalla solamente los registros cuya
--marca del coche sea igual a PEUGEOT

DECLARE
  CARROS_MATRICULA COCHES.MAT%TYPE;
  CARROS_MARCA COCHES.MARCA%TYPE;
  CARROS_MODELO COCHES.MODELO%TYPE;
  CARROS_ANIO COCHES.AN_FAB%TYPE;
  CURSOR CCOCHES_MARCA IS SELECT MARCA FROM COCHES;
BEGIN
  OPEN CCOCHES_MARCA;
  
  LOOP
    FETCH CCOCHES_MARCA INTO CARROS_MARCA;
    EXIT WHEN CCOCHES_MARCA%NOTFOUND;
    CASE
      WHEN (CARROS_MARCA='PEUGEOT') THEN
        DBMS_OUTPUT.PUT_LINE('LA MATRICULA ES: '||CARROS_MATRICULA||' LA MARCA ES: '||CARROS_MARCA||' EL MODELO ES: '||CARROS_MODELO||' EL ANIO ES: '||CARROS_ANIO);
      ELSE
      DBMS_OUTPUT.PUT_LINE('NO HAY CARROS CON ESA MARCA');
    END CASE;
  END LOOP;
  CLOSE CCOCHES_MARCA;
    
END;
