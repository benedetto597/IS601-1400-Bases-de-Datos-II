--EJERCICIO 1

CREATE SEQUENCE SQ_EJERCICIO1
START WITH 17
INCREMENT BY 1
MAXVALUE 999
MINVALUE 17;

CREATE OR REPLACE TRIGGER TG_SQ_EJERCICIO1
BEFORE INSERT ON DESTINO
FOR EACH ROW
DECLARE

BEGIN
  :NEW.COD_DESTINO:= 'DESTINO-N'||SQ_EJERCICIO1.NEXTVAL;
END;

INSERT INTO DESTINO VALUES (:NEW_COD_DESTINO, 'PRUEBA', 'PRUEBA1', 'PRUEBA2');

--EJERCICIO 2
--Este ejercicio es lo mismo solo que por simplicidad lo hice con la BD_EMPRESA y la tabla COUNTRIES, presento 
--problemas por el savepoint ya que hab�a hecho un savepoint para cada insert, mejor solo hagan 1
DECLARE
BEGIN
INSERT INTO COUNTRIES VALUES(23, 'PRUEBA1', 2);
INSERT INTO COUNTRIES VALUES(24, 'PRUEBA2', 21);
SAVEPOINT PUNTO_UNO;
INSERT INTO COUNTRIES VALUES(31, 'PRUEBA3', 40);
INSERT INTO COUNTRIES VALUES(30, 'PRUEBA4', 60);
SAVEPOINT PUNTO_UNO;
INSERT INTO COUNTRIES VALUES(12, 'PRUEBA5', 5);
INSERT INTO COUNTRIES VALUES(12, 'PRUEBA6', 30);
SAVEPOINT PUNTO_UNO;
COMMIT;

EXCEPTION 
WHEN OTHERS THEN
  IF (SQLCODE=-1) THEN
   DBMS_OUTPUT.PUT_LINE('EL ERROR ES:'|| SQLCODE);
   DBMS_OUTPUT.PUT_LINE('EL ERROR ES:'|| SQLERRM);
   ROLLBACK TO  SAVEPOINT PUNTO_UNO;
   END IF;
   IF (SQLCODE=-2291) THEN
   DBMS_OUTPUT.PUT_LINE('EL ERROR ES:'|| SQLCODE);
   DBMS_OUTPUT.PUT_LINE('EL ERROR ES:'|| SQLERRM);
   ROLLBACK TO SAVEPOINT  PUNTO_UNO;
   END IF;
   IF (SQLCODE=-1438) THEN
   DBMS_OUTPUT.PUT_LINE('EL ERROR ES:'|| SQLCODE);
   DBMS_OUTPUT.PUT_LINE('EL ERROR ES:'|| SQLERRM);
   ROLLBACK TO SAVEPOINT PUNTO_UNO;
   END IF;
END;



--EJERCICIO 3

DECLARE
FECHA_TEMPORAL VARCHAR(200);
TYPE FILA IS RECORD(
  NIF_EMPRESA TRASLADO.NIF_EMPRESA%TYPE,
  CODIGO_RESIDUO TRASLADO.COD_RESIDUO%TYPE,
  FECHA_ENVIO TRASLADO.FECHA_ENVIO%TYPE,
  CODIGO_DESTINO TRASLADO.COD_DESTINO%TYPE,
  ENVASE TRASLADO.ENVASE%TYPE,
  FECHA_LLEGADA TRASLADO.FECHA_LLEGADA%TYPE,
  TRATAMIENTO TRASLADO.TRATAMIENTO%TYPE,
  CANTIDAD_TRASLADO TRASLADO.CANTIDAD_TRASLADO%TYPE,
  DESC_TRASLADO TRASLADO.DESC_TRASLADO%TYPE,
  DESC_RESIDUO RESIDUO.DESC_RESIDUO%TYPE,
  TOXICIDAD RESIDUO.TOXICIDAD%TYPE
  );
  TYPE TABLA_DATOS IS TABLE OF FILA INDEX BY PLS_INTEGER;
  DATOS_TABLA TABLA_DATOS;
  ITERACION NUMBER(5):=0;
BEGIN
SELECT TRASLADO.NIF_EMPRESA, TRASLADO.COD_RESIDUO, TRASLADO.FECHA_ENVIO, TRASLADO.COD_DESTINO, TRASLADO.ENVASE, TRASLADO.FECHA_LLEGADA
,TRASLADO.TRATAMIENTO, TRASLADO.CANTIDAD_TRASLADO, TRASLADO.DESC_TRASLADO, RESIDUO.DESC_RESIDUO, RESIDUO.TOXICIDAD BULK  COLLECT INTO DATOS_TABLA FROM TRASLADO
INNER JOIN RESIDUO ON RESIDUO.COD_RESIDUO=TRASLADO.COD_RESIDUO;
DBMS_OUTPUT.PUT_LINE('LA CANTIDAD DE REGISTROS ES: ' ||SQL%ROWCOUNT);

WHILE (ITERACION<SQL%ROWCOUNT) LOOP

    FECHA_TEMPORAL:= TO_CHAR(DATOS_TABLA(ITERACION+1).FECHA_LLEGADA,'yyyy-dd-mm'); 
    FECHA_TEMPORAL:= SUBSTR(FECHA_TEMPORAL,9); 
    IF(FECHA_TEMPORAL = '08') THEN  
        IF(DATOS_TABLA(ITERACION+1).TRATAMIENTO='Incineración' or DATOS_TABLA(ITERACION+1).TRATAMIENTO='Almacenamiento') THEN  
        
        DBMS_OUTPUT.PUT_LINE('EL NIF: ' ||DATOS_TABLA(ITERACION+1).NIF_EMPRESA);
        DBMS_OUTPUT.PUT_LINE('EL CODIGO ES: ' ||DATOS_TABLA(ITERACION+1).CODIGO_RESIDUO);
        DBMS_OUTPUT.PUT_LINE('LA FECHA ES: ' ||DATOS_TABLA(ITERACION+1).FECHA_ENVIO);
        DBMS_OUTPUT.PUT_LINE('EL CODIGO DESTINO ES: ' ||DATOS_TABLA(ITERACION+1).CODIGO_DESTINO);
        DBMS_OUTPUT.PUT_LINE('EL ENVASE ES: ' ||DATOS_TABLA(ITERACION+1).ENVASE);
        DBMS_OUTPUT.PUT_LINE('LA FECHA LLEGADA ES: ' ||DATOS_TABLA(ITERACION+1).FECHA_LLEGADA);
        DBMS_OUTPUT.PUT_LINE('EL TRATAMIENTO: ' ||DATOS_TABLA(ITERACION+1).TRATAMIENTO);
        DBMS_OUTPUT.PUT_LINE('LA CANTIDAD ES: ' ||DATOS_TABLA(ITERACION+1).CANTIDAD_TRASLADO);
        DBMS_OUTPUT.PUT_LINE('EL DESC TRASLADO ES: ' ||DATOS_TABLA(ITERACION+1).DESC_TRASLADO);
        DBMS_OUTPUT.PUT_LINE('EL DESC RESIDUO: ' ||DATOS_TABLA(ITERACION+1).DESC_RESIDUO);
        DBMS_OUTPUT.PUT_LINE('LA TOXICIDAD ES: ' ||DATOS_TABLA(ITERACION+1).TOXICIDAD);
        DBMS_OUTPUT.PUT_LINE(CHR(13));
      END IF;
    END IF;
  ITERACION:=ITERACION+1;
END LOOP;
END;



--EJERCICIO 4  

DECLARE
FECHA_TEMPORAL VARCHAR2(200);
TYPE FILA IS RECORD(
  NIF_EMPRESA TRASLADO.NIF_EMPRESA%TYPE,
  CODIGO_RESIDUO TRASLADO.COD_RESIDUO%TYPE,
  FECHA_ENVIO TRASLADO.FECHA_ENVIO%TYPE,
  CODIGO_DESTINO TRASLADO.COD_DESTINO%TYPE,
  ENVASE TRASLADO.ENVASE%TYPE,
  FECHA_LLEGADA TRASLADO.FECHA_LLEGADA%TYPE,
  TRATAMIENTO TRASLADO.TRATAMIENTO%TYPE,
  CANTIDAD_TRASLADO TRASLADO.CANTIDAD_TRASLADO%TYPE,
  DESC_TRASLADO TRASLADO.DESC_TRASLADO%TYPE,
  DESC_RESIDUO RESIDUO.DESC_RESIDUO%TYPE,
  TOXICIDAD RESIDUO.TOXICIDAD%TYPE
  );
  
CURSOR NOMBRE_CURSOR IS SELECT TRASLADO.NIF_EMPRESA, TRASLADO.COD_RESIDUO, TRASLADO.FECHA_ENVIO, TRASLADO.COD_DESTINO, TRASLADO.ENVASE, TRASLADO.FECHA_LLEGADA
,TRASLADO.TRATAMIENTO, TRASLADO.CANTIDAD_TRASLADO, TRASLADO.DESC_TRASLADO, RESIDUO.DESC_RESIDUO, RESIDUO.TOXICIDAD  FROM TRASLADO
INNER JOIN RESIDUO ON RESIDUO.COD_RESIDUO=TRASLADO.COD_RESIDUO;
REGISTRO FILA;

BEGIN
  OPEN NOMBRE_CURSOR;
  LOOP
   FETCH NOMBRE_CURSOR INTO REGISTRO;
   EXIT WHEN NOMBRE_CURSOR%NOTFOUND;
   FECHA_TEMPORAL:= TO_CHAR(REGISTRO(ITERACION+1).FECHA_LLEGADA,'yyyy-dd-mm'); 
   FECHA_TEMPORAL:= SUBSTR(FECHA_TEMPORAL,9); 
    IF(FECHA_TEMPORAL = '08') THEN  
    IF(REGISTRO(ITERACION+1).TRATAMIENTO='Incineración' or REGISTRO(ITERACION+1).TRATAMIENTO='Almacenamiento') THEN  
    DBMS_OUTPUT.PUT_LINE('EL NIF: ' ||REGISTRO.NIF_EMPRESA);
    DBMS_OUTPUT.PUT_LINE('EL CODIGO ES: ' ||REGISTRO.CODIGO_RESIDUO);
    DBMS_OUTPUT.PUT_LINE('LA FECHA ES: ' ||REGISTRO.FECHA_ENVIO);
    DBMS_OUTPUT.PUT_LINE('EL CODIGO DESTINO ES: ' ||REGISTRO.CODIGO_DESTINO);
    DBMS_OUTPUT.PUT_LINE('EL ENVASE ES: ' ||REGISTRO.ENVASE);
    DBMS_OUTPUT.PUT_LINE('LA FECHA LLEGADA ES: ' ||REGISTRO.FECHA_LLEGADA);
    DBMS_OUTPUT.PUT_LINE('EL TRATAMIENTO: ' ||REGISTRO.TRATAMIENTO);
    DBMS_OUTPUT.PUT_LINE('LA CANTIDAD ES: ' ||REGISTRO.CANTIDAD_TRASLADO);
    DBMS_OUTPUT.PUT_LINE('EL DESC TRASLADO ES: ' ||REGISTRO.DESC_TRASLADO);
    DBMS_OUTPUT.PUT_LINE('EL DESC RESIDUO: ' ||REGISTRO.DESC_RESIDUO);
    DBMS_OUTPUT.PUT_LINE('LA TOXICIDAD ES: ' ||REGISTRO.TOXICIDAD);
    DBMS_OUTPUT.PUT_LINE(CHR(13));
  
    END IF;
    END IF;
 END LOOP;
 CLOSE NOMBRE_CURSOR;
END;
 
--CONSULTA SOLO ERA PARA VER ALGO XD
SELECT * FROM TRASLADO WHERE EXTRACT (MONTH FROM FECHA_LLEGADA)=08;


--EJERCICIO 5
CREATE USER analista IDENTIFIED BY analista 
DEFAULT TABLESPACE users 
TEMPORARY TABLESPACE temp 
QUOTA UNLIMITED ON users; 

--EJERCICIO 6
CREATE ROLE administrador; 
GRANT CREATE SESSION, CREATE ANY TABLE, CREATE ANY PROCEDURE, ALTER ANY TABLE, 
ALTER ANY PROCEDURE, DROP ANY TABLE, DROP ANY PROCEDURE TO administrador; 
GRANT administrador TO analista; 


---CONSULTANDO ROLES CREADOS 
SELECT * FROM DBA_ROLES; 

---CONSULTAR PRIVILEGIOS ASOCIADOS A UN ROL 
SELECT * FROM DBA_SYS_PRIVS WHERE GRANTEE='administrador'; 

 